Репозиторий students создан для выполнения студентами А.Г.Марчука своих экспериментальных работ. Такая организация
взаимодействия с научным руководителем позволяет удобнее организовать индивидуальные и коллективные обсуждения
поставленных задач, особенностей их реализации, написание и изучение кода, анализ полученных результатов. 
Также студенты приучаются к современной системе управления проектами GIT и особенностям коллективной работы над
проектами. 

Репозиторий состоит из отдельных проектов, которые могут быть независимыми или связанными по проектным
потребностям. Каждому студенту рекомендуется менять код только своего проекта или, когда он "дорастет", код 
коллективного проекта. В принципе, система контроля за исходым кодом позволяет вернуться к предыдущим вариантам,
но надо знать, что в твоем проекте кто-то покопался и это может потребовать времени. Так что чужие проекты смотреть 
можно, а менять не стоит. Даже из лучших побуждений! Если Вы считаете важным что-то изменить в чужом проекте,
лучше напишите письмо автору проекта или научному руководителю.

Репозиторий структурирован под Visual Studio 2012. В рамках решения (solution) students можно заводить произвольное
количество проектов. Заводите только то, что напрямую относится к обучению под руководством научного руководителя. 
Не забывайте давать информацию о проекте. Это может быть текстовый файл напр. Description.txt. Не стесняйтесь 
проставлять свое авторство конкретным проектом. Не помещайте в репозиторий больших файлов с данными. Если Вам нужны
большие данные, учитесь их генерировать. И наоборот, следите за тем, чтобы необходимые для запуска Вашей программы 
файлы были не только в проекте, но и попали в репозиторий. Соответственно, научитесь управлять конфигурацией через
.gitignore. 

В некоторых случаях, Ваш проект может быть совсем не связан с C# или Веб-приложениями. Тогда это будет просто 
Git-директория, учитесь работать с проектом и в этом случае.

Полезные файлы, требующиемы для разработок, если они имеют общий контекст использования, можно и нужно помещать в
проект Common. Для DLL'ек заведена директория DLLs. Для DLL'ек, собранных под 64-разрядную конфигурацию, есть 
директория DLLs64. Еще раз - воздержитесь от того, чтобы помещать в репозиторий слишком большие файлы.

Данные и базы данных располагайте либо в директориии вашего проекта, либо в директории Databases. Я обычно сразу
определяю путь к данным типа
    string path = "../../../Databases/";
Если данные нужны для проведения тестирования или экпериментов, то рекомендуется размещать их в Databases - там их
легко контролировать и уничтожать. Если данные важны и для будущих работ, то размещайте их в проекте.


 
