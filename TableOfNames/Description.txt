Проект TableOfNames------------------------------------------------------------------------------------------
Авторы: Бычков Д.А., Торопов М.Е.

В этом проекте реализовано создание таблицы имен на основе PolarDB.

Руководство по использованию проекта:
	
1 Для компиляции требуется:
	- в менеджере ссылок проекта указать ссылки на библиотеки: PolarDB.dll
	Они находятся в папках "Common\DLLs" и "Common\DLLs64"

2) Описание классов:
	- TestingTableOfNames - основной класс, в котором описаны методы для загрузки и поиска данных.
	- BinaryTreeIndex - класс бинарного дерева, содержащего индексы (офсеты) опорной таблицы
	- TableOfNames - класс создания таблицы имен с методами: поиск строки по коду и наоборот, построение индексов

Сделано:
- Генерация данных для опорной таблицы
- Методы поиска строки по id и наоборот
- Добавление данных порциями
- Создание таблицы имен
- Измерение характеристик индексных построений и поиска
- Добавлен в индекс "полуключ"
- Изменены методы поиска и сравнения
- Добавление и удаление записей - слабая динамика
- Удаление файлов БД
- Слияние в отдельном потоке: механизм двух словарей и слияние вспомогательного словаря на диск при заполнении.
- Освоены некоторые из инструментов многопоточного программирования: Threads, BackgroundWorker; средства синхронизации потоков: AutoResetEvent, Monitor, lock

Планы на будущее:
- Обсудить проблемы и оптимизировать код.
- Реализовать поиск в индексном файле с помощью диапазона, т.е. разбить файл на куски m=k/p, где p - количество записей в куске, m - номер куска, k количество записей в инд. файле. 
- Возможно стоит попробовать реализовать слияние вспомогательного словаря в отдельном потоке, не прекращая добавления в него новых данных.
- Если делать добавление новых данных порциями, данные будут уникальны и не нужен поиск для проверки уникальности.
- Проверка уникальности при добавлении новых данных: если делаем поиск - это надо сделать эффективно.

Известные проблемы:
- Возможно есть баг в методе Scan у PaEntry - происходит повторение перебираемых офсетов и соответственно их повторение при добавлении.
- Теряется самый первый элемент при добавлении офсетов в дерево.
- В случае изменения опорной таблицы (удаление строки) будет происходить повтор нового id с уже используемым.
- Любые изменения опорной таблицы ведут к необходимости перестраивать индексы.
- Часто, если не удалить файлы БД, можно поймать "OutOfMemory"
- Странный баг связанный с бинарным деревом - разрастание индексного файла до очень больших размеров, скорее всего связан с неудалением файлов БД
- Вспомогательный словарь не имеет фиксированного размера, в связи с чем возникнут проблемы, когда его размер превысит размер доступной оперативной памяти и начнется активное использование файла подкачки. 